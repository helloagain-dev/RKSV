###########################################################################
# Copyright 2017 ZT Prentner IT GmbH (www.ztp.at)
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###########################################################################

#:import os os

<TreeViewButton>:
	halign: 'left'
	valign: 'middle'
	text_size: self.size
	size_hint_y: None

<ErrorDialog>:
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		Label:
			text_size: root.width, None
			size: self.texture_size
			text: str(root.exception)
		Button:
			size_hint_y: None
			text: "Ok"
			on_release: root.cancel()

<LoadDialog>:
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		FileChooserListView:
			id: filechooser
			path: app.curSearchPath
		BoxLayout:
			size_hint_y: None
			Button:
				text: _("Cancel")
				on_release: root.cancel()
			Button:
				text: _("Load")
				on_release: root.load(filechooser.path, filechooser.selection)

<SaveDialog>:
	text_input: text_input
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		FileChooserListView:
			id: filechooser
			on_selection: text_input.text = self.selection and self.selection[0] or ''
			path: app.curSearchPath
		TextInput:
			id: text_input
			size_hint_y: None
			multiline: False
		BoxLayout:
			size_hint_y: None
			Button:
				text: _("Cancel")
				on_release: root.cancel()
			Button:
				text: _("Save")
				on_release: root.save(filechooser.path, text_input.text)

<SingleValueDialog>:
	text_input: text_input
	BoxLayout:
		size: root.size
		pos: root.pos
		orientation: "vertical"
		TextInput:
			id: text_input
			multiline: False
		BoxLayout:
			size_hint_y: None
			Button:
				text: _("Cancel")
				on_release: root.cancel()
			Button:
				text: _("Ok")
				on_release: root.receive_value(text_input.text)

<RadioButton@BoxLayout>:
	text: ''
	state: 'normal'
	group: None
	change: None
	orientation: 'horizontal'
	size_hint_y: None
	CheckBox:
		on_press: self.parent.change()
		size_hint_x: None
		group: self.parent.group
		state: self.parent.state
	Label:
		text_size: self.size
		halign: 'left'
		valign: 'middle'
		text: self.parent.text

<ViewReceiptWidget>:
	id: view_w
	verify_button: view_w_verify
	decrypt_button: view_w_decrypt
	aes_input: view_w_aes
	orientation: 'vertical'
	ActionBar:
		pos_hint: {'top': 1}
		ActionView:
			use_separator: True
			ActionPrevious:
				title: _('Receipt')
				on_press: root.cancel()
			ActionOverflow:
			ActionButton:
				text: _('Exit')
				on_press: app.stop()
	ListView:
		adapter: view_w.adapter
	TextInput:
		size_hint_y: None
		id: view_w_aes
		multiline: False
	BoxLayout:
		size_hint_y: None
		orientation: 'horizontal'
		Button:
			id: view_w_verify
			text: _('Verify')
			on_press: view_w.verify()
		Button:
			id: view_w_decrypt
			text: _('Decrypt Turnover Counter')
			on_press: view_w.decrypt()

<ViewReceiptItem>:
	id: vr_i
	cols: 2
	rows: 1
	size_hint_y: None
	Label:
		text_size: self.size
		text: vr_i.item_name
		italic: True
		padding_x: 10
		halign: 'right'
		valign: 'middle'
	Label:
		text_size: self.size
		text: vr_i.item_value
		padding_x: 10
		halign: 'left'
		valign: 'middle'

<VerifyReceiptWidget>:
	id: vr_w
	receiptInput: vr_ti
	loadLayout: vr_load
	buttons: { 'JWS': vr_jws, 'QR': vr_qr, 'OCR': vr_ocr, 'URL': vr_url }
	orientation: 'vertical'
	BoxLayout:
		id: vr_load
		orientation: 'horizontal'
		size_hint_y: None
		TextInput:
			id: vr_ti
			multiline: False
		Button:
			size_hint_x: None
			text: '...'
			on_press: vr_w.loadReceipt()
	ScrollView:
		do_scroll_x: False
		GridLayout:
			rows: 4
			size_hint_y: None
			height: self.minimum_height
			RadioButton:
				id: vr_jws
				change: (lambda: vr_w.selectInputType('JWS'))
				text: _('JWS string')
				group: 'input_format'
				state: 'down'
			RadioButton:
				id: vr_qr
				change: (lambda: vr_w.selectInputType('QR'))
				text: _('QR code')
				group: 'input_format'
			RadioButton:
				id: vr_ocr
				change: (lambda: vr_w.selectInputType('OCR'))
				text: _('OCR code')
				group: 'input_format'
			RadioButton:
				id: vr_url
				change: (lambda: vr_w.selectInputType('URL'))
				text: _('URL')
				group: 'input_format'
	Button:
		size_hint_y: None
		text: _('Read Receipt')
		on_press: vr_w.viewReceipt()

<VerifyDEPWidget>:
	id: vd_w
	verify_button: vd_w_verify
	treeView: vd_tv
	aesInput: vd_ti
	orientation: 'vertical'
	BoxLayout:
		size_hint_y: None
		orientation: 'horizontal'
		Button:
			text: _('Load DEP')
			on_press: vd_w.loadDEP()
		Button:
			text: _('Load AES Key')
			on_press: vd_w.loadAES()
	TextInput:
		id: vd_ti
		size_hint_y: None
		multiline: False
	ScrollView:
		do_scroll_x: False
		TreeView:
			id: vd_tv
			size_hint_y: None
			root_options: {'text': 'Belege-Gruppe'}
			height: self.minimum_height
	Button:
		size_hint_y: None
		text: _('Verify')
		disabled: True
		id: vd_w_verify
		on_press: vd_w.verify()

<KeyStoreWidget>:
	id: ks_w
	orientation: 'vertical'
	treeView: ks_tv
	ScrollView:
		do_scroll_x: False
		TreeView:
			id: ks_tv
			size_hint_y: None
			hide_root: True
			height: self.minimum_height
	BoxLayout:
		size_hint_y: None
		orientation: 'horizontal'
		Button:
			text: _('Import')
			on_press: ks_w.importKeyStore()
		Button:
			text: _('Export')
			on_press: ks_w.exportKeyStore()

<RKToolActionBar@ActionBar>:
	pos_hint: {'top': 1}
	ActionView:
		use_separator: True
		ActionPrevious:
			title: _('Registrierkassen Tool')
			with_previous: False
		ActionButton:
			text: '(c) ZTP.at'
			disabled: True
		ActionOverflow:
		ActionButton:
			text: _('Exit')
			on_press: app.stop()

<MainWidget>:
	pos_hint: {'top': 1}
	orientation: 'vertical'
	RKToolActionBar:
	TabbedPanel:
		tab_width: int(root.width/3)
		do_default_tab: False
		TabbedPanelItem:
			text_size: self.size
			text: _('Verify Receipt')
			VerifyReceiptWidget:
		TabbedPanelItem:
			text_size: self.size
			text: _('Verify DEP')
			VerifyDEPWidget:
		TabbedPanelItem:
			text_size: self.size
			text: _('Key Store')
			KeyStoreWidget:
